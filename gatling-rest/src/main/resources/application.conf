clustering {
  ip = "127.0.0.1"
  ip = ${?CLUSTER_IP}
  port = 2551
  seed-ip = "127.0.0.1"
  seed-ip = ${?EXTERNAL_HOST}
  seed-port = 2551
  external-ip = "127.0.0.1"
  external-ip = ${?EXTERNAL_HOST}
  external-port = 2551
}

akka {

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  #logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor.provider = "akka.cluster.ClusterActorRefProvider"

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = ${clustering.external-ip} # the host visible to the workers (LB)
      port = ${clustering.external-port} # port on LB
      bind-hostname = ${clustering.ip} # internal host, ip of the master
      bind-port = ${clustering.port} # internal
    }
  }
  remote.netty.tcp.maximum-frame-size = 40000000b
  remote.netty.tcp.send-buffer-size = 40000000b
  remote.netty.tcp.receive-buffer-size = 40000000b

  cluster {
    seed-nodes = [
      "akka.tcp://PerformanceSystem@"${clustering.seed-ip}":"${clustering.seed-port}
    ]

    auto-down-unreachable-after = 10s
  }

  jvm-exit-on-fatal-error = false


  persistence {
    journal.plugin = "akka.persistence.journal.leveldb-shared"
    journal.leveldb-shared.store {
      native = on
      dir = "shared-journal"
    }
    snapshot-store.local.dir = "target/snapshots"
  }


  actor {
    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "com.alh.gatling.commons.MasterWorkerProtocol$RegisterWorker" = kryo
      "com.alh.gatling.commons.MasterWorkerProtocol$WorkerRequestsWork" = kryo
      "com.alh.gatling.commons.MasterWorkerProtocol$WorkFailed" = kryo
      "com.alh.gatling.commons.MasterWorkerProtocol$WorkIsDone" = kryo
      "com.alh.gatling.commons.MasterWorkerProtocol$WorkInProgress" = kryo
      "com.alh.gatling.commons.MasterWorkerProtocol$WorkIsReady" = kryo
      "com.alh.gatling.commons.MasterWorkerProtocol$WorkerRequestsFile" = kryo


      "com.alh.gatling.commons.Master$FileJob" = kryo
      "com.alh.gatling.commons.Master$Ack" = kryo
      "com.alh.gatling.commons.Master$GenerateReport" = kryo
      "com.alh.gatling.commons.Master$Job" = kryo
      "com.alh.gatling.commons.Master$JobSummaryInfo" = kryo
      "com.alh.gatling.commons.Master$Report" = kryo
      "com.alh.gatling.commons.Master$ServerInfo" = kryo
      "com.alh.gatling.commons.Master$TrackingInfo" = kryo
      "com.alh.gatling.commons.Master$UploadFile" = kryo
      "com.alh.gatling.commons.Master$UploadInfo" = kryo
      "com.alh.gatling.commons.Master$WorkerState" = kryo
      "com.alh.gatling.commons.Master$WorkerStatus" = kryo


      "com.alh.gatling.commons.JobState$JobAccepted" = kryo
      "com.alh.gatling.commons.JobState$JobCompleted" = kryo
      "com.alh.gatling.commons.JobState$JobFailed" = kryo
      "com.alh.gatling.commons.JobState$JobPending" = kryo
      "com.alh.gatling.commons.JobState$JobPostponed" = kryo
      "com.alh.gatling.commons.JobState$JobStarted" = kryo
      "com.alh.gatling.commons.JobState$JobStatusString" = kryo
      "com.alh.gatling.commons.JobState$JobTimedOut" = kryo
      "com.alh.gatling.commons.TaskEvent" = kryo
      "com.alh.gatling.commons.JobSummary$JobInfo" = kryo
      "java.util.ArrayList" = kryo
      "java.util.List" = kryo
      "java.util.LinkedList" = kryo
      "com.alh.gatling.commons.ClientConfig" = kryo
    }
  }

}

akka.extensions = ["akka.cluster.client.ClusterClientReceptionist", "com.romix.akka.serialization.kryo.KryoSerializationExtension$"]

akka {
  actor {
    kryo {

      type = "graph"

      idstrategy = "default"

      buffer-size = 4096

      max-buffer-size = -1


      use-manifests = false

      use-unsafe = false

      post-serialization-transformations = "off"

      encryption {
        aes {
          mode = "AES/CBC/PKCS5Padding"
          key = j68KkRjq21ykRGAQ
          IV-length = 16
        }
      }

      implicit-registration-logging = true

      kryo-trace = false

      kryo-custom-serializer-init = "com.alh.gatling.commons.KryoInit"

      resolve-subclasses = false


      mappings {
        "com.alh.gatling.commons.MasterWorkerProtocol$RegisterWorker" = 30
        "com.alh.gatling.commons.MasterWorkerProtocol$WorkerRequestsWork" = 31
        "com.alh.gatling.commons.MasterWorkerProtocol$WorkFailed" = 32
        "com.alh.gatling.commons.MasterWorkerProtocol$WorkIsDone" = 33
        "com.alh.gatling.commons.MasterWorkerProtocol$WorkInProgress" = 34
        "com.alh.gatling.commons.MasterWorkerProtocol$WorkIsReady" = 35
        "com.alh.gatling.commons.MasterWorkerProtocol$WorkerRequestsFile" = 36


        "com.alh.gatling.commons.Master$FileJob" = 37
        "com.alh.gatling.commons.Master$Ack" = 38
        "com.alh.gatling.commons.Master$GenerateReport" = 39
        "com.alh.gatling.commons.Master$Job" = 40
        "com.alh.gatling.commons.Master$JobSummaryInfo" = 41
        "com.alh.gatling.commons.Master$Report" = 42
        "com.alh.gatling.commons.Master$ServerInfo" = 43
        "com.alh.gatling.commons.Master$TrackingInfo" = 44
        "com.alh.gatling.commons.Master$UploadFile" = 45
        "com.alh.gatling.commons.Master$UploadInfo" = 46
        "com.alh.gatling.commons.Master$WorkerState" = 47
        "com.alh.gatling.commons.Master$WorkerStatus" = 48


        "com.alh.gatling.commons.JobState$JobAccepted" = 49
        "com.alh.gatling.commons.JobState$JobCompleted" = 50
        "com.alh.gatling.commons.JobState$JobFailed" = 51
        "com.alh.gatling.commons.JobState$JobPending" = 52
        "com.alh.gatling.commons.JobState$JobPostponed" = 53
        "com.alh.gatling.commons.JobState$JobStarted" = 54
        "com.alh.gatling.commons.JobState$JobStatusString" = 55
        "com.alh.gatling.commons.JobState$JobTimedOut" = 56
        "com.alh.gatling.commons.TaskEvent" = 57
        "com.alh.gatling.commons.JobSummary$JobInfo" = 58
        "java.util.ArrayList" = 59
        "java.util.List" = 60
        "java.util.LinkedList" = 61
        "com.alh.gatling.commons.ClientConfig" = 62
      }

      classes = [
        "com.alh.gatling.commons.MasterWorkerProtocol$RegisterWorker"
        "com.alh.gatling.commons.MasterWorkerProtocol$WorkerRequestsWork"
        "com.alh.gatling.commons.MasterWorkerProtocol$WorkFailed"
        "com.alh.gatling.commons.MasterWorkerProtocol$WorkIsDone"
        "com.alh.gatling.commons.MasterWorkerProtocol$WorkInProgress"
        "com.alh.gatling.commons.MasterWorkerProtocol$WorkIsReady"
        "com.alh.gatling.commons.MasterWorkerProtocol$WorkerRequestsFile"

        "com.alh.gatling.commons.Master$FileJob"
        "com.alh.gatling.commons.Master$Ack"
        "com.alh.gatling.commons.Master$GenerateReport"
        "com.alh.gatling.commons.Master$Job"
        "com.alh.gatling.commons.Master$JobSummaryInfo"
        "com.alh.gatling.commons.Master$Report"
        "com.alh.gatling.commons.Master$ServerInfo"
        "com.alh.gatling.commons.Master$TrackingInfo"
        "com.alh.gatling.commons.Master$UploadFile"
        "com.alh.gatling.commons.Master$UploadInfo"
        "com.alh.gatling.commons..Master$WorkerState"
        "com.alh.gatling.commons.Master$WorkerStatus"


        "com.alh.gatling.commons.JobState$JobAccepted"
        "com.alh.gatling.commons.JobState$JobCompleted"
        "com.alh.gatling.commons.JobState$JobFailed"
        "com.alh.gatling.commons.JobState$JobPending"
        "com.alh.gatling.commons.JobState$JobPostponed"
        "com.alh.gatling.commons.JobState$JobStarted"
        "com.alh.gatling.commons.JobState$JobStatusString"
        "com.alh.gatling.commons.JobState$JobTimedOut"
        "com.alh.gatling.commons.TaskEvent"
        "com.alh.gatling.commons.JobSummary$JobInfo"
        "java.util.ArrayList"
        "java.util.List"
        "java.util.LinkedList"
        "com.alh.gatling.commons.ClientConfig"
      ]
    }
  }
}